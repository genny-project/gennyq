<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>life.genny</groupId>
	<artifactId>gennyq</artifactId>
	<version>10.2.0</version>
	<packaging>pom</packaging>
	<name>GennyQ</name>
	<description>Genny Quarkus Services Repository</description>
	<url>http://www.gada.io</url>
	<inceptionYear>2022</inceptionYear>
	<organization>
		<name>GADA Technology</name>
		<url>http://www.gada.io/</url>
	</organization>

	<licenses>
		<license>
			<name>Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<!-- Quarkus Properties -->
		<quarkus.platform.version>2.14.3.Final</quarkus.platform.version>
		<quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
		<quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
		<quarkus-plugin.version>${quarkus.platform.version}</quarkus-plugin.version>

		<!-- drools -->
		<version.org.drools>8.31.0.Final</version.org.drools>
		<version.org.optaplanner>${version.org.drools}</version.org.optaplanner>

		<!-- kogito -->
		<kogito.version>1.31.0.Final</kogito.version>
		<kogito.bom.group-id>org.kie.kogito</kogito.bom.group-id>
		<kogito.bom.artifact-id>kogito-bom</kogito.bom.artifact-id>
		<kogito.bom.version>${kogito.version}</kogito.bom.version>

    <!-- Maven Properties -->
        <maven.version>3.8.1</maven.version>
        <maven.compiler.parameters>true</maven.compiler.parameters>
        <maven.compiler.version>3.8.1</maven.compiler.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.release>17</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
        <enforcer-plugin.version>3.0.0</enforcer-plugin.version>
        <jar-plugin.version>3.2.2</jar-plugin.version>
        <source-plugin.version>3.2.0</source-plugin.version>
        <deploy-plugin.version>3.0.0-M2</deploy-plugin.version>
        <version.compiler.plugin>3.0.0-M5</version.compiler.plugin>

		<!-- Global properties -->
		<genny.version>${project.version}</genny.version>

		<jackson.version>2.13.0</jackson.version>
		<jandex.version>3.0.3</jandex.version>
		<jjwt.version>0.7.0</jjwt.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<surefire.forkCount>1</surefire.forkCount>
		<failsafe.include>**/*IT.java</failsafe.include>
		<failsafe.exclude>**/Native*IT.java</failsafe.exclude>
		<alphanetworkCompilerEnabled>false</alphanetworkCompilerEnabled>
		<tests.category></tests.category>

		<!-- Port 0 means dynamic port -->
		<tests.quarkus.http.port>0</tests.quarkus.http.port>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>


		<!-- override default to fast-jar packaging for forward-compatibility -->
		<quarkus.package.type>fast-jar</quarkus.package.type>
		<!-- dependencies version -->
		<version.org.skyscreamer>1.5.0</version.org.skyscreamer>
		<!-- JKube -->
		<version.org.eclipse.jkube>1.4.0</version.org.eclipse.jkube>
		<version.docker.plugin>0.37.0</version.docker.plugin>
	</properties>
	<!-- distributionManagement section -->
	<distributionManagement>
		<repository>
			<id>jboss-releases-repository</id>
			<name>JBoss Releases Repository</name>
			<url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</url>
		</repository>
		<snapshotRepository>
			<id>jboss-snapshots-repository</id>
			<name>JBoss Snapshot Repository</name>
			<url>https://repository.jboss.org/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
	<pluginRepositories>
		<pluginRepository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Repository Group</name>
			<url>https://repository.jboss.org/nexus/content/groups/public/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<scm>
		<connection>scm:git:https://github.com/genny-project/gennyq.git</connection>
		<developerConnection>scm:git:git@github.com:genny-project/gennyq.git</developerConnection>
		<url>https://github.com/genny-project/gennyq</url>
	</scm>
	<developers>
		<developer>
			<name>All developers are listed in the GADA Technology organization</name>
			<url>https://github.com/genny-project/people</url>
		</developer>
	</developers>
	<profiles>
		<!-- Default Profile -->
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<modules>
				<module>qwandaq</module>
				<module>serviceq</module>
				<module>kogitoq</module>
				<module>bridge</module>
				<module>dropkick</module>
				<module>lauchy</module>
				<module>messages</module>
				<module>shleemy</module>
				<module>fyodor</module>
			</modules>
		</profile>
		<!-- Native Profile -->
		<profile>
			<id>native</id>
			<properties>
				<failsafe.include>**/Native*IT.java</failsafe.include>
				<failsafe.exclude></failsafe.exclude>
				<quarkus.package.type>native</quarkus.package.type>
				<!-- Native building needs a fixed port for tests -->
				<tests.quarkus.http.port>8080</tests.quarkus.http.port>
			</properties>
			<activation>
				<property>
					<name>native</name>
				</property>
			</activation>
			<modules>
				<module>qwandaq</module>
				<module>serviceq</module>
				<module>kogitoq</module>
				<module>bridge</module>
				<module>dropkick</module>
				<module>lauchy</module>
				<module>messages</module>
				<module>shleemy</module>
				<module>fyodor</module>
			</modules>
		</profile>
		<profile>
			<id>persistence</id>
			<activation>
				<property>
					<name>persistence</name>
				</property>
			</activation>
			<properties>
				<tests.category>persistence</tests.category>
			</properties>
		</profile>
		<profile>
			<id>jdbc-persistence</id>
			<activation>
				<property>
					<name>jdbc-persistence</name>
				</property>
			</activation>
		</profile>
		<profile>
			<id>events</id>
			<activation>
				<property>
					<name>events</name>
				</property>
			</activation>
		</profile>
		<profile>
			<id>productized</id>
			<activation>
				<property>
					<name>productized</name>
				</property>
			</activation>
		</profile>
		<profile>
			<id>optaplanner-downstream</id>
			<activation>
				<property>
					<name>optaplanner</name>
				</property>
			</activation>
			<modules>
				<module>process-optaplanner-quarkus</module>
				<module>process-optaplanner-springboot</module>
			</modules>
		</profile>
		<profile>
			<id>optaplanner-downstream-native</id>
			<activation>
				<property>
					<name>optaplanner-native</name>
				</property>
			</activation>
			<properties>
				<failsafe.include>**/Native*IT.java</failsafe.include>
				<failsafe.exclude></failsafe.exclude>
				<quarkus.package.type>native</quarkus.package.type>
				<!-- Native building needs a fixed port for tests -->
				<tests.quarkus.http.port>8080</tests.quarkus.http.port>
			</properties>
			<modules>
				<module>process-optaplanner-quarkus</module>
			</modules>
		</profile>
	</profiles>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-spring-boot-starter-remote</artifactId>
				<version>${version.org.infinispan}</version>
			</dependency>
			<dependency>
				<groupId>org.skyscreamer</groupId>
				<artifactId>jsonassert</artifactId>
				<version>${version.org.skyscreamer}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.quarkus</groupId>
					<artifactId>quarkus-maven-plugin</artifactId>
					<version>${version.io.quarkus}</version>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${version.org.springframework.boot}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.5</version>
					<executions>
						<execution>
							<id>add-it-resources</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/test-run/META-INF</outputDirectory>
								<resources>
									<resource>
										<directory>target/classes/META-INF</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${surefire-plugin.version}</version>
					<configuration>
						<forkCount>${surefire.forkCount}</forkCount>
						<reuseForks>true</reuseForks>
						<includes>
							<include>${failsafe.include}</include>
						</includes>
						<excludes>
							<exclude>${failsafe.exclude}</exclude>
						</excludes>
						<systemPropertyVariables>
							<tests.category>${tests.category}</tests.category>
							<enable.resource.infinispan>${enable.resource.infinispan}</enable.resource.infinispan>
							<enable.resource.kafka>${enable.resource.kafka}</enable.resource.kafka>
							<container.image.keycloak>${container.image.keycloak}</container.image.keycloak>
							<container.image.infinispan>${container.image.infinispan}</container.image.infinispan>
							<container.image.kafka>${container.image.kafka}</container.image.kafka>
							<native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
							<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
							<enable.resource.mongodb>${enable.resource.mongodb}</enable.resource.mongodb>
							<quarkus.http.test-port>${tests.quarkus.http.port}</quarkus.http.test-port>
						</systemPropertyVariables>
						<classesDirectory>${project.build.outputDirectory}</classesDirectory>
						<workingDirectory>${project.build.directory}/test-run</workingDirectory>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${enforcer-plugin.version}</version>
					<executions>
						<execution>
							<id>enforce-versions</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>${maven.version}</version>
									</requireMavenVersion>
									<requireJavaVersion>
										<version>${maven.compiler.release}</version>
									</requireJavaVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${deploy-plugin.version}</version>
					<configuration>
						<retryFailedDeploymentCount>10</retryFailedDeploymentCount>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.version}</version>
					<configuration>
						<release>${maven.compiler.release}</release>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${surefire-plugin.version}</version>
					<configuration>
						<forkCount>${surefire.forkCount}</forkCount>
						<reuseForks>true</reuseForks>
						<runOrder>hourly</runOrder>
						<systemPropertyVariables>
							<tests.category>${tests.category}</tests.category>
							<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
						</systemPropertyVariables>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.kie.kogito</groupId>
					<artifactId>kogito-maven-plugin</artifactId>
					<version>${kogito.version}</version>
				</plugin>
				<!-- Packaging -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${jar-plugin.version}</version>
					<executions>
						<execution>
							<id>default-jar</id>
							<!-- <configuration> -->
							<!--   <archive> -->
							<!--     <manifestEntries combine.children="append"> -->
							<!--       <Automatic-Module-Name>${java.module.name}</Automatic-Module-Name> -->
							<!--     </manifestEntries> -->
							<!--   </archive> -->
							<!-- </configuration> -->
						</execution>
						<!-- No OSGi manifestEntries for <goal>jar</goal>: if it supported, then felix has already added them -->
						<execution>
							<id>test-jar</id>
							<goals>
								<goal>test-jar</goal>
							</goals>
							<configuration>
								<skipIfEmpty>true</skipIfEmpty>
								<excludes>
									<exclude>**/logback-test.xml</exclude>
									<exclude>**/jndi.properties</exclude>
								</excludes>
								<archive>
									<manifestEntries>
										<Bundle-SymbolicName>${java.module.name}.tests</Bundle-SymbolicName>
										<Bundle-Version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi.snapshot.qualifier}</Bundle-Version>
										<Bundle-Name>${project.name}</Bundle-Name>
										<Bundle-Vendor>${project.organization.name}</Bundle-Vendor>
									</manifestEntries>
								</archive>
							</configuration>
						</execution>
					</executions>
					<configuration>
						<archive>
							<manifest>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${source-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
							<configuration>
								<archive>
									<manifestEntries>
										<Bundle-ManifestVersion>2</Bundle-ManifestVersion>
										<Bundle-SymbolicName>${java.module.name}.source</Bundle-SymbolicName>
										<Bundle-Version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi.snapshot.qualifier}</Bundle-Version>
										<Bundle-Name>${project.name}</Bundle-Name>
										<Bundle-Vendor>${project.organization.name}</Bundle-Vendor>
										<Eclipse-SourceBundle>${java.module.name};version="${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi.snapshot.qualifier}";roots:="."</Eclipse-SourceBundle>
									</manifestEntries>
								</archive>
							</configuration>
						</execution>
						<execution>
							<id>attach-test-sources</id>
							<goals>
								<goal>test-jar-no-fork</goal>
							</goals>
							<configuration>
								<archive>
									<manifestEntries>
										<Bundle-ManifestVersion>2</Bundle-ManifestVersion>
										<Bundle-SymbolicName>${java.module.name}.tests.source</Bundle-SymbolicName>
										<Bundle-Version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi.snapshot.qualifier}</Bundle-Version>
										<Bundle-Name>${project.name}</Bundle-Name>
										<Bundle-Vendor>${project.organization.name}</Bundle-Vendor>
										<Eclipse-SourceBundle>${java.module.name}.tests;version="${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi.snapshot.qualifier}";roots:="."</Eclipse-SourceBundle>
									</manifestEntries>
								</archive>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Image build / Kubernetes deployment -->
				<plugin>
					<groupId>org.eclipse.jkube</groupId>
					<artifactId>kubernetes-maven-plugin</artifactId>
					<version>${version.org.eclipse.jkube}</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.jkube</groupId>
					<artifactId>openshift-maven-plugin</artifactId>
					<version>${version.org.eclipse.jkube}</version>
				</plugin>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${version.docker.plugin}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- need at least maven 3.6.2, fail fast with actionable error rather than obscure errors like [ Error injecting: private org.eclipse.aether.spi.log.Logger org.apache.maven.repository.internal.DefaultVersionRangeResolver.logger ] -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- Entry needed to create test-jars even for packaging types war, bundle, ... -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- Entry needed to create, install and deploy sources jars -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
<plugin>
      <groupId>org.jboss.jandex</groupId>
      <artifactId>jandex-maven-plugin</artifactId>
      <version>1.2.3</version>
      <executions>
        <execution>
          <id>make-index</id>
          <goals>
            <goal>jandex</goal>
          </goals>
        </execution>
      </executions>
    </plugin>
		</plugins>
	</build>
</project>
